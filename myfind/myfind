#!/usr/bin/env python3

import os, re
from sys import argv

filepath = ''
approved_extensions = [
    '.txt'
]
search_term = ''
sorted_keys = []

def get_instances():
    global approved_extensions, search_term, filepath
    
    instances = {}
    for folder, sub_folders, files in os.walk(filepath):
        if 'node_modules' not in folder and '.git' not in folder:
            for extension in approved_extensions:
                for f in files:
                    instances[f'{folder}/{f}'] = []
                    if extension in f:
                        textFile = open(f'{folder}/{f}','r')
                        content = textFile.readlines()
                        textFile.close()
                        for i in range(len(content)):
                            if re.search(search_term, content[i].lower()):
                                instances[f'{folder}/{f}'].append({'line':i+1,'text':content[i]})
    return instances

def sort_keys(examples):
    for key in examples:
        sorted_keys.append(key)
    sorted_keys.sort()

def print_instances(examples):
    sort_keys(examples)
    for key in sorted_keys:
        if len(examples[key]) > 0:
            print(f'\n\n{key}\n')
            for e in examples[key]:
                print(f'{e["line"]}\t{e["text"]}')


if __name__ == "__main__":
    if len(argv) < 2:
        print('''USAGE:
findterm <search-term> [<directory>] [<file types,..,..>]

DEFAULTS:
Directory: pwd / {os.getcwd()}
Filetypes: 'txt' (.txt always included)

EXAMPLE:
findterm "jquery"
findterm "jquery" ~/WebDev/Learning
findterm "jquery" ~/WebDev/Learning .js .html .css
''')
        quit()
    
    else:
        search_term = argv[1].lower()
        if len(argv) < 3:
            filepath = os.getcwd()
        else:
            filepath = argv[2]

        if len(argv) > 3:
            for i in range(3, len(argv)):
                approved_extensions.append(argv[i])
        
        print_instances(get_instances())

